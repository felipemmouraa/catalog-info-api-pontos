apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: api-pontos
  description: The API Pontos service
  tags:
    - node
    - express
spec:
  type: service
  owner: Grupo 2
  lifecycle: production
  providesApis:
    - pontos-api
  links:
    - url: 'https://github.com/Inteli-College/2024-2B-T06-api-pontos'
      title: 'Source Code'

---

apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: pontos-api
  description: The API for Pontos service
spec:
  type: openapi
  lifecycle: production
  owner: Grupo 2
  definition:
    $text: |
      {
        "openapi": "3.0.0",
        "info": {
          "version": "1.0.0",
          "title": "API Documentation",
          "description": "API documentation for the server."
        },
        "servers": [
          {
            "url": "http://localhost:8443",
            "description": "Local development server"
          }
        ],
        "paths": {
          "/metrics": {
            "get": {
              "summary": "Get application metrics",
              "responses": {
                "200": {
                  "description": "Metrics retrieved successfully",
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "/receive-action": {
            "post": {
              "summary": "Process user action",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "name": { "type": "string" }
                          },
                          "required": ["id", "name"]
                        },
                        "news": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "title": { "type": "string" },
                            "category": { "type": "string" }
                          },
                          "required": ["id", "title", "category"]
                        },
                        "action": { "type": "string" }
                      },
                      "required": ["user", "news", "action"]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Message processed successfully",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "Invalid data",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "500": {
                  "description": "Internal server error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
---

apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: rabbitmq
  description: RabbitMQ instance for the communication between loyalty engine and API Points
spec:
  type: queue
  owner: Grupo 2

---

apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: prometheus
  description: Prometheus monitoring for the API Points
spec:
  type: monitoring
  owner: Grupo 2
